package com.example.jyace.xiangqi;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.view.MotionEvent;
import android.view.SurfaceHolder;
import android.view.SurfaceView;

public class Help extends SurfaceView implements SurfaceHolder.Callback {
	XIActivity activity;
	private TutorialThread thread;//Ë¢Ö¡ï¿½ß³ï¿½
	Bitmap back;//ï¿½ï¿½ï¿½ï¿½Í¼ï¿½ï¿½Å¥
	Bitmap bei;//ï¿½ï¿½ï¿½ï¿½Í¼
	public Help(Context context,XIActivity activity) {
		super(context);
		this.activity = activity;//ï¿½Ãµï¿½activityï¿½ï¿½ï¿½ï¿½
        getHolder().addCallback(this);
        this.thread = new TutorialThread(getHolder(), this);//ï¿½Ø»ï¿½ï¿½ß³Ì³ï¿½Ê¼ï¿½ï¿½
        initBitmap();//Í¼Æ¬ï¿½ï¿½Ô´ï¿½ï¿½Ê¼ï¿½ï¿½
	}
	public void initBitmap(){//ï¿½ï¿½Ê¼ï¿½ï¿½ï¿½ï¿½ï¿½Ãµï¿½ï¿½ï¿½Í¼Æ¬
		back = BitmapFactory.decodeResource(getResources(), R.mipmap.back);//ï¿½ï¿½ï¿½Ø°ï¿½Å¥Í¼
		bei = BitmapFactory.decodeResource(
						getResources(), 
						R.mipmap.bei);//ï¿½ï¿½ï¿½ï¿½Í¼Æ¬ï¿½ï¿½Ê¼ï¿½ï¿½
	}
	public void onDraw(Canvas canvas){//ï¿½ï¿½ï¿½Æ·ï¿½ï¿½ï¿½
		canvas.drawBitmap(bei, 0, 90, new Paint());//ï¿½ï¿½ï¿½Æ±ï¿½ï¿½ï¿½Í¼
		canvas.drawBitmap(back, 200, 370, new Paint());//ï¿½ï¿½ï¿½Æ°ï¿½Å¥
	}
	public void surfaceChanged(SurfaceHolder holder, int format, int width, int height) {}
	public void surfaceCreated(SurfaceHolder holder) {//ï¿½ï¿½ï¿½ï¿½Ê±ï¿½ï¿½ï¿½ï¿½Ë¢Ö¡ï¿½ß³ï¿½
        this.thread.setFlag(true);//Ñ­ï¿½ï¿½ï¿½ï¿½Ö¾
        this.thread.start();//Ë¢Ö¡ï¿½ß³ï¿½
	}
	public void surfaceDestroyed(SurfaceHolder holder) {//Í£Ö¹Ë¢Ö¡ï¿½ß³ï¿½
        boolean retry = true;//Ñ­ï¿½ï¿½ï¿½ï¿½Ö¾
        thread.setFlag(false);//Ñ­ï¿½ï¿½ï¿½ï¿½Ö¾Î»
        while (retry) {
            try {
                thread.join();//ï¿½ß³Ì½ï¿½ï¿½ï¿½
                retry = false;//Í£Ö¹Ñ­ï¿½ï¿½
            }catch (InterruptedException e){}//Ñ­ï¿½ï¿½ï¿½ï¿½Ë¢Ö¡ï¿½ß³Ì½ï¿½ï¿½ï¿½
        }
	}
	public boolean onTouchEvent(MotionEvent event) {//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä»
		if(event.getAction() == MotionEvent.ACTION_DOWN){
			if(event.getX()>200 && event.getX()<200+back.getWidth()
					&& event.getY()>370 && event.getY()<370+back.getHeight()){
				activity.handler.sendEmptyMessage(1);
			}
		}
		return super.onTouchEvent(event);
	} 
	class TutorialThread extends Thread{//Ë¢Ö¡ï¿½ß³ï¿½
		private int span = 1000;//Ë¯ï¿½ï¿½1000ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
		private SurfaceHolder surfaceHolder;
		private Help helpView;//ï¿½ï¿½ï¿½Ã¸ï¿½ï¿½ï¿½
		private boolean flag = false;//Ñ­ï¿½ï¿½ï¿½ï¿½ï¿? 
        public TutorialThread(SurfaceHolder surfaceHolder, Help helpView) {
            this.surfaceHolder = surfaceHolder;
            this.helpView = helpView;
        }
        public void setFlag(boolean flag) {//Ñ­ï¿½ï¿½ï¿½ï¿½ï¿?
        	this.flag = flag;
        }
		public void run() {//ï¿½ï¿½Ğ´ï¿½ï¿½ï¿½ï¿½
			Canvas c;//ï¿½ï¿½ï¿½ï¿½
            while (this.flag) {//Ñ­ï¿½ï¿½
                c = null;
                try {
                    c = this.surfaceHolder.lockCanvas(null);
                    synchronized (this.surfaceHolder) {//Í¬ï¿½ï¿½
                    	helpView.onDraw(c);//ï¿½ï¿½ï¿½Æ·ï¿½ï¿½ï¿½
                    }
                } finally {
                    if (c != null) {//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä»ï¿½ï¿½Ê¾
                        this.surfaceHolder.unlockCanvasAndPost(c);
                    }
                }
                try{
                	Thread.sleep(span);//ï¿½ï¿½ï¿½ï¿½Ë¯ï¿½ï¿½Ê±ï¿½ä£¬ï¿½ï¿½Î»ï¿½ï¿½ï¿½ï¿½
                }catch(Exception e){//ï¿½ï¿½ï¿½ï¿½ï¿½ì³£
                	e.printStackTrace();//ï¿½ï¿½ï¿½ï¿½ì³£ï¿½ï¿½Õ»ï¿½ï¿½Ï?
                }
            }
		}
	}
}